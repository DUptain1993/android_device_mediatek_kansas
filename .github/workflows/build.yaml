name: OrangeFox Build

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type (userdebug or user)'
        required: true
        default: 'userdebug'
        type: choice
        options:
          - userdebug
          - user

env:
  DEVICE: kansas
  FOX_VERSION: R15.0

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 180
    
    steps:
      - name: Checkout device tree
        uses: actions/checkout@v4
        with:
          path: device/motorola/kansas
      
      - name: Set up build environment
        run: |
          # Add 32-bit architecture support
          sudo dpkg --add-architecture i386
          sudo apt-get update
          
          # Install architecture-independent packages (NO :i386 needed)
          sudo apt-get install -y bc bison build-essential ccache curl flex \
            gperf imagemagick libxml2 libxml2-utils lzop openjdk-17-jdk pngcrush \
            rsync schedtool squashfs-tools xsltproc zip xmlstarlet libgl1-mesa-dev \
            libxml-simple-perl libswitch-perl libxml-parser-perl unzip maven git-lfs \
            wget python-is-python3 repo liblz4-tool
            
          # Install 64-bit development packages
          sudo apt-get install -y libtinfo5 libncurses5 libssl-dev zlib1g-dev \
            libbz2-dev libghc-bzlib-dev libsepol-dev libacl1-dev liblzo2-dev
            
          # Install 32-bit compatibility libraries (WITH :i386)
          sudo apt-get install -y gcc-multilib g++-multilib git gnupg \
            lib32z1-dev lib32ncurses5-dev lib32readline8 libbz2-1.0:i386 \
            libtinfo5:i386 libncurses5:i386 libssl-dev:i386 zlib1g-dev:i386 \
            libsepol-dev:i386 libacl1-dev:i386 liblzo2-dev:i386

      - name: Verify critical tools
        run: |
          java -version
          python3 --version
          repo --version
          ccache --version
          echo "All critical build tools are installed"

      - name: Initialize repo
        run: |
          mkdir -p ~/android/fox
          cd ~/android/fox
          repo init -u https://github.com/minimal-manifest-twrp/platform_manifest_twrp_omni -b twrp-15 --depth=1
          
          mkdir -p .repo/local_manifests
          echo '<manifest>' > .repo/local_manifests/roomservice.xml
          echo '  <project path="device/teamvee/twrp" name="TeamVee/device_teamvee_twrp" revision="master"></project>' >> .repo/local_manifests/roomservice.xml
          echo '</manifest>' >> .repo/local_manifests/roomservice.xml
          
          repo sync -c --no-clone-bundle --no-tags --prune --force-sync -j4 device/teamvee/twrp

      - name: Add device tree
        run: |
          cd ~/android/fox
          mkdir -p device/motorola
          cp -r $GITHUB_WORKSPACE/device/motorola/kansas device/motorola/
          ls -la device/motorola/kansas

      - name: Set up build environment variables
        run: |
          cd ~/android/fox
          echo "export ALLOW_MISSING_DEPENDENCIES=true" >> ~/.bashrc
          echo "export LC_ALL=C" >> ~/.bashrc
          echo "export USE_CCACHE=1" >> ~/.bashrc
          echo "export CCACHE_EXEC=$(which ccache)" >> ~/.bashrc
          echo "export CCACHE_DIR=~/ccache" >> ~/.bashrc
          source ~/.bashrc
          ccache -M 50G
          ccache -o compression=true
          ccache -z

      - name: Configure build
        run: |
          cd ~/android/fox
          . build/envsetup.sh
          lunch omni_${{ env.DEVICE }}-${{ github.event.inputs.build_type || 'userdebug' }}

      - name: Build recovery (test)
        run: |
          cd ~/android/fox
          echo "This would build recovery for ${{ env.DEVICE }}"
          echo "For testing purposes, we're creating a dummy recovery.img"
          mkdir -p out/target/product/${{ env.DEVICE }}
          echo "Dummy recovery image for ${{ env.DEVICE }}" > out/target/product/${{ env.DEVICE }}/recovery.img
          ls -lh out/target/product/${{ env.DEVICE }}/recovery.img

      - name: Package recovery
        run: |
          cd ~/android/fox
          mkdir -p $HOME/recovery_output
          cp out/target/product/${{ env.DEVICE }}/recovery.img $HOME/recovery_output/
          
          echo "OrangeFox Recovery ${{ env.FOX_VERSION }} for Motorola kansas" > $HOME/recovery_output/README.txt
          echo "Device: Motorola moto g 2025" >> $HOME/recovery_output/README.txt
          
          cd $HOME/recovery_output
          zip -r OrangeFox-${{ env.FOX_VERSION }}-${{ env.DEVICE }}-test.zip *

      - name: Upload recovery artifact
        uses: actions/upload-artifact@v4.3.1
        with:
          name: OrangeFox-Recovery-${{ env.DEVICE }}-test
          path: $HOME/recovery_output/
          retention-days: 7
          overwrite: true
